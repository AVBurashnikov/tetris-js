!function(){"use strict";const t=new class{constructor(){this.controls={LEFT:"left",RIGHT:"right",DOWN:"down",ROTATE:"rotate"},this.init()}init(){this.score=0,this.lines=0,this.level=1,this.speed=1,this.playfield=this.newPlayfield,this.block=this.newBlock,this.nextBlock=this.newBlock,this.firstMoveHasCollision=!1}get newBlock(){const t={x:4,y:0,figure:this.getFigure()};return this.hasCollision(t)&&(this.firstMoveHasCollision=!0),t}get newPlayfield(){const t=[];for(let e=0;e<20;e++)t.push(Array(10).fill(0));return t}get state(){return{playfield:this.playfield,block:this.block,nextBlock:this.nextBlock,score:this.score,lines:this.lines,level:this.level,isGameOver:this.firstMoveHasCollision}}left(){this.block.x-=1,this.hasCollision(this.block)&&(this.block.x+=1)}right(){this.block.x+=1,this.hasCollision(this.block)&&(this.block.x-=1)}down(){this.block.y+=1,this.hasCollision(this.block)&&(this.block.y-=1,this.lockBlock(),this.checkLines(),this.block=this.nextBlock,this.nextBlock=this.newBlock)}rotate(){const t=this.block.figure.length,e={x:this.block.x,y:this.block.y,figure:[]};for(let s=0;s<t;s++)e.figure.push(Array(t).fill(0));for(let s=0;s<t;s++)for(let i=0;i<t;i++)e.figure[i][t-s-1]=this.block.figure[s][i];this.hasCollision(e)||(this.block=e)}hasCollision({x:t,y:e,figure:s}){const i=s.length;for(let l=e;l<e+i;l++)for(let a=t;a<t+i;a++)if(void 0!==this.playfield[l]){if(void 0===this.playfield[l][a]&&s[l-e][a-t])return!0;if(this.playfield[l][a]&&s[l-e][a-t])return!0}else if(s[l-e][a-t])return!0;return!1}lockBlock(){const{x:t,y:e,figure:s}=this.block;for(let i=e;i<e+s.length;i++)for(let l=t;l<t+s.length;l++)void 0!==this.playfield[i]&&(this.playfield[i][l]+=s[i-e][l-t])}checkLines(){const t=this.clearLines();t&&this.changeGameState(t)}clearLines(){let t=0;return this.playfield.map(((e,s)=>{e.includes(0)||(this.playfield.splice(s,1),this.playfield.unshift(Array(10).fill(0)),t+=1)})),t}changeGameState(t){this.changeScore(t),this.changeLines(t),this.changeLevel(),this.changeSpeed()}changeScore(t){this.score+=[0,100,300,700,1500][t]}changeLines(t){this.lines+=t}changeLevel(){this.level=1+Math.trunc(this.score/3e3)}changeSpeed(){this.speed=1-this.level/10}getFigure(){switch(Math.floor(7*Math.random())){case 0:return[[0,0,0],[1,1,1],[0,1,0]];case 1:return[[0,0,0],[2,2,2],[0,0,2]];case 2:return[[0,0,0],[3,3,3],[3,0,0]];case 3:return[[0,0,0],[4,4,0],[0,4,4]];case 4:return[[0,0,0],[0,5,5],[5,5,0]];case 5:return[[0,0,0,0],[0,6,6,0],[0,6,6,0],[0,0,0,0]];case 6:return[[0,7,0,0],[0,7,0,0],[0,7,0,0],[0,7,0,0]]}}},e=new class{constructor(){this.scoreW=160,this.canvasW=488,this.canvasH=648,this.gameW=328,this.gameH=this.canvasH,this.backgroundColor="black",this.strokeW=4,this.blockW=32,this.blockH=32,this.nextBlockW=16,this.nextBlockH=16,this.color={white:"white",black:"black",blackOp06:"rgba(0, 0, 0, 0.6)",1:"red",2:"orange",3:"yellow",4:"green",5:"cyan",6:"blue",7:"purple"},this.fontFamily="Press Start 2P",this.render={displayStart:this.displayStart.bind(this),displayPause:this.displayPause.bind(this),displayGame:this.displayGame.bind(this),displayGameOver:this.displayGameOver.bind(this)},this.ctx=this.getCanvasContext()}getCanvasContext(){const t=document.getElementById("root"),e=document.createElement("canvas");return e.width=this.canvasW,e.height=this.canvasH,t.appendChild(e),e.getContext("2d")}displayStart(){this.clearDisplay(),this.drawText("Press ENTER to start...",this.canvasW/2-130,this.canvasH/2,12)}displayPause(){this.drawRectangle(0,0,this.canvasW,this.canvasH,this.color.blackOp06),this.drawText("Press ENTER to continue...",this.canvasW/2-140,this.canvasH/2)}displayGame({playfield:t,block:e,nextBlock:s,score:i,lines:l,level:a}){this.renderGameArea(t,e),this.renderScoreArea(i,l,a,s)}displayGameOver(t){this.clearDisplay(),this.drawText("GAME OVER",200,this.canvasH/3),this.drawText(`Score:${t}`,180,30+this.canvasH/2)}renderGameArea(t,e){this.clearDisplay(),this.drawRectangle(0,0,this.gameW,this.gameH,this.color.black,this.strokeW,this.color.white),this.renderCurrentBlock(e),this.renderPlayField(t)}renderCurrentBlock({x:t,y:e,figure:s}){for(let i=e;i<e+s.length;i++)for(let l=t;l<t+s.length;l++){let a=s[i-e][l-t];a&&this.drawRectangle(l*this.blockW+this.strokeW,i*this.blockH+this.strokeW,this.blockW,this.blockH,this.color[a],this.strokeW,this.color.black)}}renderPlayField(t){for(let e=0;e<20;e++)for(let s=0;s<10;s++){let i=t[e][s];i&&this.drawRectangle(s*this.blockW+this.strokeW,e*this.blockH+this.strokeW,this.blockW,this.blockH,this.color[i],this.strokeW,this.color.black)}}renderScoreArea(t,e,s,i){this.drawText(`Score:${t}`,340,30),this.drawText(`Level:${e}`,340,60),this.drawText(`Lines:${s}`,340,90),this.drawText("Next:",340,140),this.renderNextBlock(i)}renderNextBlock(t){const e=t.figure.length;for(let s=0;s<e;s++)for(let i=0;i<e;i++){let e=t.figure[s][i];e&&this.drawRectangle(360+i*this.nextBlockW,150+s*this.nextBlockH,this.nextBlockW,this.nextBlockH,this.color[e],2,this.color.black)}}clearDisplay(){this.drawRectangle(0,0,this.canvasW,this.canvasH,this.color.black)}drawRectangle(t,e,s,i,l,a=0,r=this.color.black){this.ctx.fillStyle=l,this.ctx.fillRect(t,e,s,i),this.ctx.lineWidth=a,this.ctx.strokeStyle=r,this.ctx.strokeRect(t,e,s,i)}drawText(t,e,s,i=12,l=this.color.white,a=this.fontFamily,r=1){this.ctx.font=`${i}px '${a}'`,this.ctx.letterSpacing=`${r}px`,this.ctx.fillStyle=l,this.ctx.fillText(t,e,s)}},s=new class{constructor(t,e){this.view=e,this.game=t,this.intervalId=null}startGame(){this.view.render.displayStart(),document.addEventListener("keydown",this.keydownHandler.bind(this))}keydownHandler({keyCode:t}){const{LEFT:e,RIGHT:s,DOWN:i,ROTATE:l}=this.game.controls;switch(t){case 37:this.controlHandler(e);break;case 39:this.controlHandler(s);break;case 40:this.controlHandler(i);break;case 38:this.controlHandler(l);break;case 13:this.actionHandler()}}controlHandler(t){this.game.state.isGameOver||(this.game[t](),this.view.render.displayGame(this.game.state))}actionHandler(){this.game.state.isGameOver&&this.game.init(),this.intervalId?this.stopInterval("pause"):this.startInterval()}startInterval(){const t=1e3-100*this.game.level,e=this.game.level;this.view.render.displayGame(this.game.state),this.intervalId=setInterval((()=>{this.game.state.isGameOver?this.stopInterval("gameOver"):(this.controlHandler("down"),this.view.render.displayGame(this.game.state),this.game.level!==e&&this.stopInterval("update"))}),t>0?t:100)}stopInterval(t){switch(clearInterval(this.intervalId),this.intervalId=null,t){case"pause":this.view.render.displayPause();break;case"gameOver":this.view.render.displayGameOver(this.game.state.score);break;case"update":this.startInterval()}}}(t,e);s.startGame()}();